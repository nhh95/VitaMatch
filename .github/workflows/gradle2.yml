name: CI-CD
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up to JDK 21
        uses: actions/setup-java@v3  
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: make.application.yml
        run: |
          cd  ./src/main/resources
          New-Item -Path "./application.yml" -ItemType "File" -Force
          echo "${{ secrets.APPLICATION }}" > ./application.yml
                

        
      - name: Gradle Build Action
        uses: gradle/gradle-build-action@v3.5.0
        with:
          arguments: bootjar

      - name: docker image build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/vitamatch .

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/vitamatch

      # - name: Deploy to server SSH
      #   uses: appleboy/ssh-action@v0.1.6
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.SERVER_SSH_KEY }}
      #     script: |
      #       #docker stop $(docker ps -a -q) 
      #       #docker rm $(docker ps -a -q)
      #       # Stop vitamatch container
      #       if (docker ps -a --format '{{.Names}}' | Select-String '^vitamatch$') {
      #         docker stop vitamatch
      #       }
      #       # Remove vitamatch container
      #       if (docker ps -a --format '{{.Names}}' | Select-String '^vitamatch$') {
      #         docker rm vitamatch
      #       }
            
      #       # Run new vitamatch container
      #       docker pull ${{ secrets.DOCKER_USERNAME }}/vitamatch
      #       docker run -d -p 9080:8091 --name vitamatch ${{ secrets.DOCKER_USERNAME }}/vitamatch

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Run SSH command on Windows Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "powershell -Command 'Write-Output Hello from Windows!'"

    
            
